<!DOCTYPE qhelp PUBLIC "-//Semmle//qhelp//EN" "qhelp.dtd">
<qhelp>

<overview>
<p>
Allowing users to freely choose to call the constructor or method of the class through reflection. This means that 
malicious users can carefully construct requests to create instances of any class or call methods of any class.
</p>
</overview>

<recommendation>
<p>
Create a list of classes that are allowed to load reflectively and strictly verify the input content to ensure that 
users can only execute classes or codes that are running.
</p>
</recommendation>

<example>
<p>
The following examples are good examples and bad examples. When using <code>Class.forName(...)</code> or 
<code>ClassLoader.loadClass(...)</code> to get the class, then create the class object or call the method of the class. 
When the user is not authenticated Input, it is easy to cause security risks, for example: <code>bad1</code>/<code>bad2
</code>/<code>bad3</code>. When the user input is verified by <code>contains</code> or <code>equals</code> and then 
the reflection operation is performed, the system security can be well controlled, for example: 
<code >good1</code>/<code>good2</code>/<code>good3</code>.
</p>
<sample src="UnsafeReflection.java" />

</example>

<references>

<li>
Unsafe use of Reflection | OWASP:
<a href="https://owasp.org/www-community/vulnerabilities/Unsafe_use_of_Reflection">Unsafe use of Reflection</a>.
</li>
<li>
Java owasp: Classes should not be loaded dynamically:
<a href="https://rules.sonarsource.com/java/tag/owasp/RSPEC-2658">Classes should not be loaded dynamically</a>.
</li>
</references>

</qhelp>
